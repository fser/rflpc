.TH "eth_const.h" 3 "Wed Mar 21 2012" "rfLPC" \" -*- nroff -*-
.ad l
.nh
.SH NAME
eth_const.h \- 
.PP
Ethernet driver constants\&.  

.SH SYNOPSIS
.br
.PP
\fC#include '\&.\&./config\&.h'\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBRFLPC_ETH_PCENET_BIT\fP   (1 << 30)"
.br
.RI "\fIBit to set to activate ethernet in PCONP register\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAX_FRAME_LENGTH\fP   1538"
.br
.RI "\fIMaximum size of an ethernet frame Consist of: \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAX_CLOCK\fP   2500000"
.br
.RI "\fIMaximum allowed clock frequency for MII, defined by IEEE 802\&.3, see p\&. \fP"
.in -1c
.PP
.RI "\fBEthernet pin configuration\fP"
.br
This allows the configuration of the pins of the LPC17xx to use the ethernet device\&.
.PP
This values are for LPC17xx devices\&. 
.PP
.in +1c
.in +1c
.ti -1c
.RI "#define \fBRFLPC_ETH_PIN_PORT\fP   1"
.br
.RI "\fINumber of the port the eth is connected to\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_PIN_TXD0\fP   0"
.br
.RI "\fITransmit data bit 0\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_PIN_TXD1\fP   1"
.br
.RI "\fITransmit data bit 1\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_PIN_TX_EN\fP   4"
.br
.RI "\fITransmit data enable pin\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_PIN_CRS\fP   8"
.br
.RI "\fICarrier sense Pin\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_PIN_RXD0\fP   9"
.br
.RI "\fIReceive data bit 0\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_PIN_RXD1\fP   10"
.br
.RI "\fIReceive data bit 1\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_PIN_RX_ER\fP   14"
.br
.RI "\fIReceive error\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_PIN_REF_CLK\fP   15"
.br
.RI "\fIReference clock\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_PIN_MDC\fP   16"
.br
.RI "\fIMIIM Clock pin\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_PIN_MDIO\fP   17"
.br
.RI "\fIMI data input and output pin\&. \fP"
.in -1c
.in -1c
.PP
.RI "\fBMAC Configuration register bits\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC1_RECEIVE_ENABLE\fP   (1 << 0)"
.br
.RI "\fIEnable reception\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC1_PASS_ALL_FRAMES\fP   (1 << 1)"
.br
.RI "\fIPass all frames to driver\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC1_RX_FLOW_CONTROL\fP   (1 << 2)"
.br
.RI "\fIActivate receive path flow control\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC1_TX_FLOW_CONTROL\fP   (1 << 3)"
.br
.RI "\fIActivate transmit path flow control\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC1_LOOPBACK\fP   (1 << 4)"
.br
.RI "\fIActivate interface loopback (for testing purpose mainly\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC1_RESET_TX\fP   (1 << 8)"
.br
.RI "\fIReset tranmit path\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC1_RESET_MCS_TX\fP   (1 << 9)"
.br
.RI "\fIReset Transmit MAC Sublayer control logic\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC1_RESET_RX\fP   (1 << 10)"
.br
.RI "\fIReset receive path\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC1_RESET_MCS_RX\fP   (1 << 11)"
.br
.RI "\fIReset receive MAC Sublayer control logic\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC1_SIM_RESET\fP   (1 << 14)"
.br
.RI "\fIReset the random number generator in the transmit function\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC1_SOFT_RESET\fP   (1 << 15)"
.br
.RI "\fIReset the MAC device\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC2_FULL_DUPLEX\fP   (1 << 0)"
.br
.RI "\fIDuplex mode selection\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC2_FRAME_LENGTH_CHK\fP   (1 << 1)"
.br
.RI "\fICheck lenght of received and transmited frames and report in status info\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC2_HUGE_FRAME_ENABLE\fP   (1 << 2)"
.br
.RI "\fIActivate jumbo frames\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC2_DELAYED_CRC\fP   (1 << 3)"
.br
.RI "\fIWait some bytes before begining CRC calculation (if proprietary bytes are sent before 802\&.3 header\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC2_CRC_ENABLE\fP   (1 << 4)"
.br
.RI "\fIAdd CRC to every frames\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC2_PAD_CRC_ENABLE\fP   (1 << 5)"
.br
.RI "\fIActivate CRC and/or Padding\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC2_VLAN_PAD_ENABLE\fP   (1 << 6)"
.br
.RI "\fIActivate padding when sending frame smaller that 64 bytes\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC2_AUTO_DETECT_PAD_ENABLE\fP   (1 << 7)"
.br
.RI "\fIAuto detect padded frames\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC2_PURE_PREAMBLE_ENFORCE\fP   (1 << 8)"
.br
.RI "\fIForce verification of preamble\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC2_LONG_PREAMBLE_ENFORCE\fP   (1 << 9)"
.br
.RI "\fIForce the use of long preamble\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC2_NO_BACKOFF\fP   (1 << 12)"
.br
.RI "\fIDisable backoff after a collision occur\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC2_BACK_PRESSURE\fP   (1 << 13)"
.br
.RI "\fIDisable backoff after a collision occur during back pressure\&. \fP"
.ti -1c
.RI "#define \fBRFLPC_ETH_MAC2_EXCESS_DEFER\fP   (1 << 14)"
.br
.RI "\fIWhen enabled (set to ’1’) the MAC will defer to carrier indefinitely as per the Standard\&. \fP"
.in -1c
.in -1c
.PP
.RI "\fBMAC Control register bits\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "#define \fBRFLPC_ETH_CMD_RX_ENABLE\fP   (1 << 0)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_CMD_TX_ENABLE\fP   (1 << 1)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_CMD_REG_RESET\fP   (1 << 3)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_CMD_TX_RESET\fP   (1 << 4)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_CMD_RX_RESET\fP   (1 << 5)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_CMD_PASS_RUNT_FRAMES\fP   (1 << 6)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_CMD_PASS_RX_FILTER\fP   (1 << 7)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_CMD_TX_FLOW_CONTROL\fP   (1 << 8)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_CMD_RMII\fP   (1 << 9)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_CMD_FULL_DUPLEX\fP   (1 << 10)"
.br
.in -1c
.in -1c
.PP
.RI "\fBMAC Filtering register bits (p\&. 166)\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "#define \fBRFLPC_ETH_RXFILTER_UNICAST_EN\fP   (1 << 0)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_RXFILTER_BROADCAST_EN\fP   (1 << 1)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_RXFILTER_MULTICAST_EN\fP   (1 << 2)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_RXFILTER_UNICAST_HASH_EN\fP   (1 << 3)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_RXFILTER_MULTICAST_HASH_EN\fP   (1 << 4)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_RXFILTER_PERFECT_EN\fP   (1 << 5)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_RXFILTER_MAGIC_WOL_EN\fP   (1 << 12)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_RXFILTER_RXFILTER_WOL_EN\fP   (1 << 13)"
.br
.in -1c
.in -1c
.PP
.RI "\fBMIND control register\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "#define \fBRFLPC_ETH_MIND_BUSY\fP   (1)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_MIND_SCANNING\fP   (1 << 1)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_MIND_NOT_VALID\fP   (1 << 2)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_MIND_MII_LINK_FAIL\fP   (1 << 3)"
.br
.in -1c
.in -1c
.PP
.RI "\fBRMII Support register\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "#define \fBRFLPC_ETH_SUPP_10MBPS\fP   (0)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_SUPP_100MBPS\fP   (1 << 8)"
.br
.in -1c
.in -1c
.PP
.RI "\fBMII control register bits\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "#define \fBRFLPC_ETH_MCFG_SCAN_INCREMENT\fP   (1 << 0)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_MCFG_SUPPRESS_PREAMBLE\fP   (1 << 1)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_MCFG_RESET_MIIM\fP   (1 << 15)"
.br
.in -1c
.in -1c
.PP
.RI "\fBPHY Registers\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "#define \fBRFLPC_ETH_PHY_BMCR\fP   (0x0)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHY_BMSR\fP   (0x1)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHY_PHYIDR1\fP   (0x2)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHY_PHYIDR2\fP   (0x3)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHY_ANAR\fP   (0x4)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHY_ANLPAR\fP   (0x5)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHY_ANLPARNP\fP   (0x5) /* Not a bug, it IS the same addr (p\&. 36 of the DP83848J datasheet */"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHY_ANER\fP   (0x6)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHY_ANNPTR\fP   (0x7)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHY_PHYSTS\fP   (0x10)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHY_FCSCR\fP   (0x14)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHY_RECR\fP   (0x15)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHY_PCSR\fP   (0x16)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHY_RBR\fP   (0x17)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHY_LEDCR\fP   (0x18)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHY_PHYCR\fP   (0x19)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHY_10BTSCR\fP   (0x1A)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHY_CDCTRL1\fP   (0x1B)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHY_EDCR\fP   (0x1D)"
.br
.in -1c
.in -1c
.PP
.RI "\fBBasic Mode Control Register (BMSR) bits\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "#define \fBRFLPC_ETH_BMCR_RESET\fP   (1 << 15)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_BMCR_LOOPBACK\fP   (1 << 14)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_BMCR_SPEED_SELECT\fP   (1 << 13)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_BMCR_ENABLE_AUTO_NEG\fP   (1 << 12)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_BMCR_POWER_DOWN\fP   (1 << 11)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_BMCR_ISOLATE\fP   (1 << 10)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_BMCR_RESTART_AUTO_NEG\fP   (1 << 9)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_BMCR_DUPLEX_MODE\fP   (1 << 8)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_BMCR_COLLISION_TEST\fP   (1 << 7)"
.br
.in -1c
.in -1c
.PP
.RI "\fBBasic Mode Status Register (BMSR) bits\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "#define \fBRFLPC_ETH_BMSR_100BASET4\fP   (1 << 15)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_BMSR_100BASETX_FULL\fP   (1 << 14)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_BMSR_100BASETX_HALF\fP   (1 << 13)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_BMSR_10BASET_FULL\fP   (1 << 12)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_BMSR_10BASET_HALF\fP   (1 << 11)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_BMSR_MF_PREAMBLE_SUPPRESSION\fP   (1 << 6)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_BMSR_AUTO_NEG_COMPLETE\fP   (1 << 5)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_BMSR_REMOTE_FAULT\fP   (1 << 4)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_BMSR_CAN_AUTO_NEG\fP   (1 << 3)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_BMSR_LINK_STATUS\fP   (1 << 2)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_BMSR_JABBER_DETECT\fP   (1 << 1)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_BMSR_EXT_REGISTER_CAPS\fP   (1 << 0)"
.br
.in -1c
.in -1c
.PP
.RI "\fBAuto negotiation advertisement register (ANAR) bits\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "#define \fBRFLPC_ETH_ANAR_ASM_DIR\fP   (1 << 11)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_ANAR_PAUSE\fP   (1 << 10)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_ANAR_T4\fP   (1 << 9)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_ANAR_TX_FD\fP   (1 << 8)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_ANAR_TX\fP   (1 << 7)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_ANAR_10_FD\fP   (1 << 6)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_ANAR_10\fP   (1 << 5)"
.br
.in -1c
.in -1c
.PP
.RI "\fBPHY status register (PHYSTS) bits\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "#define \fBRFLPC_ETH_PHYSTS_MDI_X\fP   (1 << 14)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHYSTS_RX_ERROR_LATCH\fP   (1 << 13)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHYSTS_POLARITY_STATUS\fP   (1 << 12)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHYSTS_FALSE_CARRIER_SENSE_LATCH\fP   (1 << 11)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHYSTS_SIGNAL_DETECT\fP   (1 << 10)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHYSTS_DESCRAMBLER_LOCK\fP   (1 << 9)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHYSTS_PAGE_RECEIVED\fP   (1 << 8)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHYSTS_REMOTE_FAULT\fP   (1 << 6)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHYSTS_JABBER_DETECT\fP   (1 << 5)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHYSTS_AUTO_NEG_COMPLETE\fP   (1 << 4)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHYSTS_LOOPBACK_STATUS\fP   (1 << 3)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHYSTS_DUPLEX_STATUS\fP   (1 << 2)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHYSTS_SPEED_STATUS\fP   (1 << 1)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_PHYSTS_LINK_STATUS\fP   (1 << 0)"
.br
.in -1c
.in -1c
.PP
.RI "\fBInterrupt bits\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "#define \fBRFLPC_ETH_IRQ_EN_RX_OVERRUN\fP   (1 << 0)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_IRQ_EN_RX_ERROR\fP   (1 << 1)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_IRQ_EN_RX_FINISHED\fP   (1 << 2)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_IRQ_EN_RX_DONE\fP   (1 << 3)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_IRQ_EN_TX_UNDERRUN\fP   (1 << 4)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_IRQ_EN_TX_ERROR\fP   (1 << 5)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_IRQ_EN_TX_FINISHED\fP   (1 << 6)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_IRQ_EN_TX_DONE\fP   (1 << 7)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_IRQ_EN_SOFT\fP   (1 << 12)"
.br
.ti -1c
.RI "#define \fBRFLPC_ETH_IRQ_EN_WAKE_UP\fP   (1 << 13)"
.br
.in -1c
.in -1c
.SH "Detailed Description"
.PP 
Ethernet driver constants\&. 


.PP
Definition in file \fBeth_const\&.h\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for rfLPC from the source code\&.
