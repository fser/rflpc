.TH "General Purpose Input Output (GPIO)" 3 "Wed Mar 21 2012" "rfLPC" \" -*- nroff -*-
.ad l
.nh
.SH NAME
General Purpose Input Output (GPIO) \- 
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBRFLPC_GPIO_BASE\fP(gpio_number)   \fBTOKEN_PASTE\fP(LPC_GPIO, gpio_number)"
.br
.RI "\fIMacro used to convert a digit in the corresponding pointer\&. \fP"
.ti -1c
.RI "#define \fBrflpc_gpio_set_pin_mode_input\fP(gpio, pin)"
.br
.RI "\fISets a pin to input mode\&. \fP"
.ti -1c
.RI "#define \fBrflpc_gpio_set_pin_mode_output\fP(gpio, pin)"
.br
.RI "\fISets a pin to output mode\&. \fP"
.ti -1c
.RI "#define \fBrflpc_gpio_set_pin\fP(gpio, pin)"
.br
.RI "\fISet a pin (put a logical 1 on it) \fP"
.ti -1c
.RI "#define \fBrflpc_gpio_clr_pin\fP(gpio, pin)"
.br
.RI "\fIClear a pin (put a logical 0 on it) \fP"
.ti -1c
.RI "#define \fBrflpc_gpio_set_pins_from_mask\fP(gpio, mask)"
.br
.RI "\fISet multiple pins from a mask\&. \fP"
.ti -1c
.RI "#define \fBrflpc_gpio_clr_pins_from_mask\fP(gpio, mask)"
.br
.RI "\fIClean multiple pins from a mask\&. \fP"
.ti -1c
.RI "#define \fBrflpc_gpio_set_pin_val\fP(gpio, pin, val)"
.br
.RI "\fISets the value of a pin (0 or 1) \fP"
.ti -1c
.RI "#define \fBrflpc_gpio_set_val\fP(gpio, val, mask)"
.br
.RI "\fISets the value of multiple pins of a given port from a mask and a value\&. \fP"
.ti -1c
.RI "#define \fBrflpc_gpio_get_pin\fP(gpio, pin)   (\fBRFLPC_GPIO_BASE\fP(gpio)->FIOMASK = ~= (1 << (pin)), (\fBRFLPC_GPIO_BASE\fP(gpio)->FIOPIN >> (pin)) & 1)"
.br
.RI "\fIGets the value of a pin\&. \fP"
.ti -1c
.RI "#define \fBrflpc_gpio_get_val\fP(gpio)   (\fBRFLPC_GPIO_BASE\fP(gpio)->FIOMASK = 0, \fBRFLPC_GPIO_BASE\fP(gpio)->FIOPIN)"
.br
.RI "\fIGets the value of the entire port\&. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "static void \fBrflpc_gpio_use_pin\fP (int gpio, int pin)"
.br
.RI "\fIConfigures the multi-purpose pins of the CM3 so that it uses a given GPIO pin\&. \fP"
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define \fBrflpc_gpio_clr_pin\fP(gpio, pin)"
\fBValue:\fP
.PP
.nf
do {         \
    RFLPC_GPIO_BASE(gpio)->FIOMASK &= (1 << (pin));     \
    RFLPC_GPIO_BASE(gpio)->FIOCLR |= (1 << (pin));      \
    } while(0)
.fi
.PP
Clear a pin (put a logical 0 on it) 
.PP
Definition at line 71 of file gpio\&.h\&.
.SS "#define \fBrflpc_gpio_clr_pins_from_mask\fP(gpio, mask)"
\fBValue:\fP
.PP
.nf
do {        \
    RFLPC_GPIO_BASE(gpio)->FIOMASK = ~(mask);       \
    RFLPC_GPIO_BASE(gpio)->FIOCLR |= (mask);        \
    } while (0)
.fi
.PP
Clean multiple pins from a mask\&. 
.PP
Definition at line 83 of file gpio\&.h\&.
.PP
Referenced by rflpc_led_clr()\&.
.SS "#define \fBrflpc_gpio_set_pin\fP(gpio, pin)"
\fBValue:\fP
.PP
.nf
do {            \
    RFLPC_GPIO_BASE(gpio)->FIOMASK &= (1 << (pin));     \
    RFLPC_GPIO_BASE(gpio)->FIOSET |= (1 << (pin));      \
    } while(0)
.fi
.PP
Set a pin (put a logical 1 on it) 
.PP
Definition at line 65 of file gpio\&.h\&.
.SS "#define \fBrflpc_gpio_set_pin_mode_input\fP(gpio, pin)"
\fBValue:\fP
.PP
.nf
do { \
    RFLPC_GPIO_BASE(gpio)->FIODIR &= ~(1 << (pin)); \
    } while(0)
.fi
.PP
Sets a pin to input mode\&. 
.PP
Definition at line 55 of file gpio\&.h\&.
.SS "#define \fBrflpc_gpio_set_pin_mode_output\fP(gpio, pin)"
\fBValue:\fP
.PP
.nf
do {    \
    RFLPC_GPIO_BASE(gpio)->FIODIR |= (1 << (pin));  \
    } while(0)
.fi
.PP
Sets a pin to output mode\&. 
.PP
Definition at line 60 of file gpio\&.h\&.
.PP
Referenced by rflpc_led_init()\&.
.SS "#define \fBrflpc_gpio_set_pin_val\fP(gpio, pin, val)"
\fBValue:\fP
.PP
.nf
do {          \
    if (val) rflpc_gpio_set_pin(gpio, pin); else rflpc_gpio_clr_pin(gpio, pin); \
    } while (0)
.fi
.PP
Sets the value of a pin (0 or 1) 
.PP
Definition at line 89 of file gpio\&.h\&.
.SS "#define \fBrflpc_gpio_set_pins_from_mask\fP(gpio, mask)"
\fBValue:\fP
.PP
.nf
do {        \
    RFLPC_GPIO_BASE(gpio)->FIOMASK = ~(mask);       \
    RFLPC_GPIO_BASE(gpio)->FIOSET |= (mask);        \
    } while (0)
.fi
.PP
Set multiple pins from a mask\&. 
.PP
Definition at line 77 of file gpio\&.h\&.
.PP
Referenced by rflpc_led_set()\&.
.SS "#define \fBrflpc_gpio_set_val\fP(gpio, val, mask)"
\fBValue:\fP
.PP
.nf
do {  \
    RFLPC_GPIO_BASE(gpio)->FIOMASK = (mask);    \
    RFLPC_GPIO_BASE(gpio)->FIOPIN = (val);      \
    } while (0)
.fi
.PP
Sets the value of multiple pins of a given port from a mask and a value\&. 
.PP
Definition at line 94 of file gpio\&.h\&.
.PP
Referenced by rflpc_led_val()\&.
.SH "Function Documentation"
.PP 
.SS "static void \fBrflpc_gpio_use_pin\fP (intgpio, intpin)\fC [inline, static]\fP"

.PP
Configures the multi-purpose pins of the CM3 so that it uses a given GPIO pin\&. \fBTodo\fP
.RS 4
Add more parameters to allow the configuration of pull-up pull-down and/or open drain mode 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIgpio\fP the gpio port number 
.br
\fIpin\fP the pin to activate 
.RE
.PP

.PP
Definition at line 44 of file gpio\&.h\&.
.PP
References rflpc_pin_set()\&.
.PP
Referenced by rflpc_led_init()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for rfLPC from the source code\&.
